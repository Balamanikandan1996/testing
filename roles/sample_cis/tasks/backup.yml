---
####BACKING FILES
  - name: backing up .deb files
    find:
      paths: /var/cache/apt/archives/
      patterns: '*.deb'
#      age: -1d
      age: '{{fileage_ubuntu}}'
    register: findreg
    when: ansible_os_family == "Debian" and ansible_distribution == "Ubuntu" 
    tags:
      - updates
      - '1.9'
      - rollbackone
      - all

  - name: backing up .deb files
    fetch:
      src: "{{ item }}"
      dest: /etc/ansible/backup
    with_items: "{{findreg.files | map(attribute='path') | list}}"
    failed_when: no
    when: ansible_os_family == "Debian" and ansible_distribution == "Ubuntu" 
    tags:
      - updates
      - '1.9'
      - rollbackone
      - all

  - name: backing up cronuser
    fetch:
      src: "/etc/cron.deny"
      dest: /etc/ansible/backup
    failed_when: no
    tags:
      - cronuser
      - atcron
      - 5.1.8
      - five
      - all
	  
  - name: backing up atcron
    fetch:
      src: "/etc/at.deny"
      dest: /etc/ansible/backup
    failed_when: no
    tags:
      - atcron
      - 5.1.8
      - 5.1.9
      - five
      - all
	  
  - name: backing up forwardfiles
    shell: find / -type f -name "*.forward" | paste -sd ","
    register: forback
    failed_when: no
    tags:
      - six
      - forwardfiles
      - all
	  
  - name: backing up forwardfiles
    fetch:
      src: "{{ item }}"
      dest: /etc/ansible/backup
    with_items: "{{ forback.stdout.split(',') }}"
    failed_when: no
    tags:
      - six
      - forwardfiles
      - all

  - name: backing up netrcfiles
    shell: find /home -name ".netrc" | paste -sd ","
    register: netback
    failed_when: no
    tags:
      - netrcfiles
      - six
      - all
	  
  - name: backing up netrcfiles
    fetch:
      src: "{{ item }}"
      dest: /etc/ansible/backup
    with_items: "{{ netback.stdout.split(',') }}"
    failed_when: no
    tags:
      - netrcfiles
      - six
      - all

  - name: backing up rhosts
    shell: find /home -name ".rhosts" | paste -sd ","
    register: rhoback
    failed_when: no
    tags:
      - netrcfiles
      - six
      - all
	  
  - name: backing up rhosts
    fetch:
      src: "{{ item }}"
      dest: /etc/ansible/backup
    with_items: "{{ rho.stdout.split(',') }}"
    failed_when: no
    tags:
      - netrcfiles
      - six
      - all
	  
